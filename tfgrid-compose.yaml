name: tfgrid-ai-stack
version: 0.12.0-dev
description: AI-powered development platform with integrated Git hosting and deployment

# Pattern compatibility
patterns:
  recommended: single-vm
  supported:
    - single-vm

# Deployment hooks (called by deployer)
hooks:
  setup: deployment/setup.sh
  configure: deployment/configure.sh
  healthcheck: deployment/healthcheck.sh

# Hook configuration
hook_config:
  configure:
    optional: true
    description: "SSL and domain configuration (skipped for private deployments)"

# Single-VM pattern variables
variables:
  domain:
    type: string
    description: "Domain name for public access (leave empty for private mode)"
    default: ""
    required: false

  ssl_email:
    type: string
    description: "Email for SSL certificate (required if domain set)"
    default: ""
    required: false

  # Single-VM pattern specific variables
  vm_node:
    type: number
    description: "Node ID for VM deployment (auto-selected if 0)"
    default: 0
    required: false

  vm_cpu:
    type: number
    description: "VM CPU cores"
    default: 8
    required: false

  vm_memory:
    type: number
    description: "VM memory in MB"
    default: 16384
    required: false

  vm_disk:
    type: number
    description: "VM disk in GB"
    default: 200
    required: false

# Resource requirements
resources:
  cpu:
    min: 8
    recommended: 8
  memory:
    min: 16384
    recommended: 16384
  disk:
    min: 200
    recommended: 200
  ports:
    - 22:ssh
    - 80:http
    - 443:https
    - 3000:grafana
    - 9090:prometheus

# System dependencies
dependencies:
  system:
    - git
    - curl
    - wget
    - ansible
    - terraform
  external:
    - nodejs: ">=18.0.0"
    - npm: ">=9.0.0"

# Environment variables
environment:
  - name: DOMAIN
    required: false
    description: "Domain name for public access (leave empty for private mode)"

  - name: SSL_EMAIL
    required: false
    description: "Email for SSL certificate (required if domain set)"

  - name: API_RATE_LIMIT
    default: "100r/m"
    description: "API rate limit (requests per minute)"

  - name: BACKUP_RETENTION_DAYS
    default: "30"
    description: "Backup retention period in days"

  - name: BACKUP_SCHEDULE
    default: "0 2 * * *"
    description: "Backup cron schedule"

# Logging configuration
logging:
  method: systemd
  location: /var/log/tfgrid-ai-stack/

# Status check
status:
  method: http
  endpoint: "/api/v1/health"
  port: 3000

# App-specific commands
commands:
  launch:
    script: /opt/tfgrid-ai-stack/scripts/launch.sh
    description: "Open tfgrid-ai-stack web interface in browser"

  create:
    script: /opt/tfgrid-ai-stack/scripts/create-project.sh
    description: "Create a new AI coding project"
    args: "[project-name] [description]"
    interactive: true

  select-project:
    script: /opt/tfgrid-ai-stack/scripts/select-project.sh
    description: "Select active project for commands"
    args: "[project-name]"
    save_to_context: active_project

  run:
    script: /opt/tfgrid-ai-stack/scripts/run-project.sh
    description: "Start agent loop for a project"
    args: "[project-name]"
    uses_context: active_project
    interactive: true
    allocate_tty: false

  stop:
    script: /opt/tfgrid-ai-stack/scripts/stop-project.sh
    description: "Stop agent loop for a project"
    args: "[project-name]"
    uses_context: active_project

  monitor:
    script: /opt/tfgrid-ai-stack/scripts/monitor-project.sh
    description: "Monitor project progress"
    args: "[project-name]"
    uses_context: active_project
    interactive: true
    allocate_tty: true

  projects:
    script: /opt/tfgrid-ai-stack/scripts/list-projects.sh
    description: "Show status of all projects"

  remove:
    script: /opt/tfgrid-ai-stack/scripts/remove-project.sh
    description: "Delete a project"
    args: "[project-name]"
    uses_context: active_project

  logs:
    script: /opt/tfgrid-ai-stack/scripts/logs-project.sh
    description: "View project logs"
    args: "[project-name]"
    uses_context: active_project

  summary:
    script: /opt/tfgrid-ai-stack/scripts/summary-project.sh
    description: "Show project summary"
    args: "[project-name]"
    uses_context: active_project

  restart:
    script: /opt/tfgrid-ai-stack/scripts/restart-project.sh
    description: "Restart agent for a project"
    args: "[project-name]"
    uses_context: active_project
    allocate_tty: false

  stopall:
    script: /opt/tfgrid-ai-stack/scripts/stopall-projects.sh
    description: "Stop all running projects"

  edit:
    script: /opt/tfgrid-ai-stack/scripts/edit-project.sh
    description: "Edit project configuration"
    args: "[project-name]"

  login:
    script: /opt/tfgrid-ai-stack/scripts/login.sh
    description: "Authenticate with Qwen (OAuth)"
    interactive: true
    allocate_tty: true

  whoami:
    script: /opt/tfgrid-ai-stack/scripts/whoami.sh
    description: "Check Qwen authentication status"

  set-gitea:
    script: /opt/tfgrid-ai-stack/scripts/set-gitea.sh
    description: "Configure Gitea organization for AI projects"
    args: "[organization-name]"
    interactive: true

  status:
    description: "Show system status"
    script: /opt/tfgrid-ai-stack/scripts/status.sh

  backup:
    script: /opt/tfgrid-ai-stack/scripts/manual-backup.sh
    description: "Trigger manual backup"

  restore:
    script: /opt/tfgrid-ai-stack/scripts/restore-backup.sh
    description: "Restore from backup"
    args: "[backup-file]"

  publish:
    script: /opt/tfgrid-ai-stack/scripts/publish-project.sh publish
    description: "Publish project for web hosting"
    args: "[project-name]"

  unpublish:
    script: /opt/tfgrid-ai-stack/scripts/publish-project.sh unpublish
    description: "Remove project from web hosting"
    args: "[project-name]"

  hosting-status:
    script: /opt/tfgrid-ai-stack/scripts/publish-project.sh status
    description: "Show hosting status for a project"
    args: "[project-name]"

  setup-hosting:
    script: /opt/tfgrid-ai-stack/scripts/t-hosting.sh
    description: "Setup nginx configuration for hosting"

  hosting-health:
    script: /opt/tfgrid-ai-stack/scripts/t-hosting.sh
    description: "Check hosting infrastructure status"

# Documentation
documentation:
  readme: README.md
  architecture: ARCHITECTURE.md
  operations: OPERATIONS.md
  troubleshooting: docs/TROUBLESHOOTING.md

# Tags for discovery
tags:
  - ai
  - development
  - git
  - automation
  - monitoring
  - single-vm

# Metadata
metadata:
  category: development
  maturity: beta
  support_level: official
  estimated_cost: high
  deployment_time: "10 minutes"
  complexity_level: advanced